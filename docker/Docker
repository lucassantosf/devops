Fazer build do container pelo nome do service

sudo docker stop <name> -t 0
sudo docker rm  <name>
sudo docker-compose -f production.yml up -d --no-deps --build <name>

Resumo:

Segue a lista com os principais comandos utilizados durante o curso:

Comandos relacionados às informações

docker version - exibe a versão do docker que está instalada.
docker inspect ID_CONTAINER - retorna diversas informações sobre o container.
docker ps - exibe todos os containers em execução no momento.
docker ps -a - exibe todos os containers, independentemente de estarem em execução ou não.

Comandos relacionados à execução

docker run NOME_DA_IMAGEM - cria um container com a respectiva imagem passada como parâmetro.
docker run -it NOME_DA_IMAGEM - conecta o terminal que estamos utilizando com o do container.
docker run -d -P --name NOME dockersamples/static-site - ao executar, dá um nome ao container e define uma porta aleatória.
docker run -d -p 12345:80 dockersamples/static-site - define uma porta específica para ser atribuída à porta 80 do container, neste caso 12345.
docker run -v "CAMINHO_VOLUME" NOME_DA_IMAGEM - cria um volume no respectivo caminho do container.
docker run -it --name NOME_CONTAINER --network NOME_DA_REDE NOME_IMAGEM - cria um container especificando seu nome e qual rede deverá ser usada.

Comandos relacionados à inicialização/interrupção

docker start ID_CONTAINER - inicia o container com id em questão.
docker start -a -i ID_CONTAINER - inicia o container com id em questão e integra os terminais, além de permitir interação entre ambos.
docker stop ID_CONTAINER - interrompe o container com id em questão.

Comandos relacionados à remoção

docker rm ID_CONTAINER - remove o container com id em questão.
docker container prune - remove todos os containers que estão parados.
docker rmi NOME_DA_IMAGEM - remove a imagem passada como parâmetro.

Comandos relacionados à construção de Dockerfile

docker build -f Dockerfile - cria uma imagem a partir de um Dockerfile.
docker build -f Dockerfile -t NOME_USUARIO/NOME_IMAGEM - constrói e nomeia uma imagem não-oficial.
docker build -f Dockerfile -t NOME_USUARIO/NOME_IMAGEM CAMINHO_DOCKERFILE - constrói e nomeia uma imagem não-oficial informando o caminho para o Dockerfile.

Comandos relacionados ao Docker Hub

docker login - inicia o processo de login no Docker Hub.
docker push NOME_USUARIO/NOME_IMAGEM - envia a imagem criada para o Docker Hub.
docker pull NOME_USUARIO/NOME_IMAGEM - baixa a imagem desejada do Docker Hub.

Comandos relacionados à rede

hostname -i - mostra o ip atribuído ao container pelo docker (funciona apenas dentro do container).
docker network create --driver bridge NOME_DA_REDE - cria uma rede especificando o driver desejado.

Comandos relacionados ao docker-compose

docker-compose build - Realiza o build dos serviços relacionados ao arquivo docker-compose.yml, assim como verifica a sua sintaxe.
docker-compose up - Sobe todos os containers relacionados ao docker-compose, desde que o build já tenha sido executado.
docker-compose down - Para todos os serviços em execução que estejam relacionados ao arquivo docker-compose.yml.
  
Aula 6

Docker Compose .yml

docker-compose build
docker-compose up
docker-compose up -d
docker-compose down
docker exec -it  alura-books1 ping alura-books2
docker-compose restart

Aula 5

Network

apt-get update && apt-get install iputils-ping (instalar comando ping)
hostname -i (qual rede esta)
docker network create --driver bridge minha-reded (--driver escolher o driver de rede, bridge é uma opcao)
docker run -it --name meu-contaner --network minha-reded ubuntu (subir container em uma network)
docker network ls
docker network inspect minha-rede

Caso real, acessando um banco
docker pull douglasq/alura-books:cap05
docker run --network minha-rede -d -p 8080:3000 douglasq/alura-books:cap05
docker run --network minha-rede -d --name meu-mongo mongo

Aula 4 

DockerFile 

-Cria uma imagem a partir de um Dockerfile
docker build -f Dockerfile -t lucasf/node . 	(-f Nome do file) -t nomedaimagem .(contexto, local)
docker run -d -p 8080:3000 lucasf/node

Exemplo de Dockerfile
FROM node:latest
MAINTAINER Lucas Ferreira
ENV NODE_ENV=production
ENV PORT=3000
COPY . /var/www
WORKDIR /var/www
RUN npm install
ENTRYPOINT npm start
EXPOSE $PORT

Aula 3

Volumes

docker run -v "/var/www" ubuntu 		-Executar container criando um volume, ou seja, tudo que criado no container, irá para uma pasta aleatoria gerada pelo Docker na sua máquina, tem como alterar isto
docker inspect <ID> 				-Inspecionar um container por ID, para ver onde o volume foi gerado, no Mount.source
docker run -it -v "/home/lucas/:/var/www" ubuntu
-Linkar uma pastar da sua máquina no container, tudo que criado no container irá para dentro da pasta da máquina

O comando abaixo executa um projeto de teste em node da sua maquina dentro de um container:

docker run -d -p 8080:3000 -v "/home/lucas/Downloads/volume-exemplo:/var/www" -w "/var/www" node npm start
-Criar um container de node e executar o comando npm start nele, 
-d é modo detached para nao travar o terminal
-p para linkar a porta externa da sua maquina com a 3000 do container, ou seja, no seu browser, so digitar localhost:8080
-v para linkar o volume da sua pasta da maquina 'Docker Host' dentro do container
-w para definir qual o working directory dentro do container para podermos executar o comando npm start corretamente

Aula 2 

Comandos Básicos

docker images 					-Imagens instaladas:
docker pull hello-world   			-Download imagem do Docker Hub
docker run hello-world     			-Executar imagem pelo nome 
docker ps  					-Listar containeres em execucao
docker ps -a     				-Listar containeres criados mesmo se parados 
docker run ubuntu echo "Ola mundo"   		-Criar um container e exibir alguma mensagem
docker run -it ubuntu   			-Executar container e atrelar o terminal atual com o terminal do container
docker start <ID>      				-Startar container parado
docker stop <ID> -t 0 (-t tempo)     		-Parar container
docker start -a -i <ID> 			-Start container e atrelar o terminal atual com o terminal do container
docker rm <ID> 					-Remover container do computador
docker container prune 				-Remover todos containers
docker rmi hello-world 				-Remover imagem pelo nome
docker run -d -P dockersamples/static-site 	-Executar container em modo Detached (-d separar o terminal atual do container)(-P atribuir porta aleatoria)
docker-machine ip 				-Descobrir IP da maquina virtual
docker run -d -P --name meu-site dockersamples/static-site
docker run -d -p 12345:80 dockersamples/static-site
docker run -d -p 12345:80 -e AUTHOR="Lucas" dockersamples/static-site
docker stop $(docker ps -q)
docker port <ID>
